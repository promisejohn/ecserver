buildscript {
	ext {
		springBootVersion = '1.2.7.RELEASE';
		querydslVersion    = "3.6.9";
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") ;
		classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE');
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
	baseName = 'ecserver'
		version = '0.0.2-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'io.spring.platform:platform-bom:1.1.4.RELEASE'
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile 'org.springframework.boot:spring-boot-starter-redis'
		compile("org.springframework.boot:spring-boot-starter-data-mongodb")
		compile("org.springframework.boot:spring-boot-starter-data-rest")
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.springframework.boot:spring-boot-starter-thymeleaf')
		compile('com.h2database:h2')

		compile "com.mysema.querydsl:querydsl-core:${querydslVersion}"
		compile "com.mysema.querydsl:querydsl-jpa:${querydslVersion}"
		compile "com.mysema.querydsl:querydsl-apt:${querydslVersion}"
		compile "org.apache.commons:commons-collections4:4.0"

		testCompile('org.springframework.boot:spring-boot-starter-test') 
		testCompile("org.hamcrest:hamcrest-all")
		testCompile("org.mockito:mockito-all:1.10.19")

		runtime('mysql:mysql-connector-java')
		runtime('com.zaxxer:HikariCP')
		runtime('org.webjars:bootstrap:3.1.0')
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.7'
}

sourceSets {
	sourceSets {
		generated {
			java {
				srcDirs = ['src/main/generated']
			}
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java;
	classpath = configurations.compile
		options.compilerArgs = [
		"-proc:only",
		"-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
			]
			destinationDir = sourceSets.generated.java.srcDirs.iterator().next();
}

compileJava {
	dependsOn generateQueryDSL;
	source sourceSets.generated.java.srcDirs.iterator().next()
}

compileGeneratedJava {
	dependsOn generateQueryDSL;
	options.warnings = false;
	classpath += sourceSets.main.runtimeClasspath;
}

clean {
	delete sourceSets.generated.java.srcDirs
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER');
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8';
	}
}
